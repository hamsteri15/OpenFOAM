/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                  |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.com               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
convertToMeters 1.0;

//dimensions 
D                   1;           //nozzle diameter
outerD              #calc "15*$D";
L                   #calc "50*$D";
         


//cell counts
Ntheta              20; //number of cells along the perimeter
Nr_nozzle           5;  //number of cells in the radial direction in the nozzle
Nr_outer            20; //number of cells in the radial direction outside the nozzle
Nz                  100; //number of streamwise cells


//grading
Gr                  3.5;  //Grading towards the nozzle


//////////////////////////////
//calculated DO NOT MODIFY
/////////////////////////////
sin45           0.70711;
cos45           0.70711;

innerR          #calc "0.5*0.5*$D";
R               #calc "0.5*$D";
bigR            #calc "0.5*$outerD";   

negativeR       #calc "-0.5*$D";
negativeBigR    #calc "-0.5*$outerD";

//all possible x-coordinates 
x0              #calc "-$sin45*$bigR";
x1              #calc "-$sin45*$R";
x2              #calc "-$sin45*$innerR";
x3              #calc " $sin45*$innerR";
x4              #calc " $sin45*$R";
x5              #calc " $sin45*$bigR";


//all possible y-coordinates
y0              #calc "-$cos45*$bigR";
y1              #calc "-$cos45*$R";
y2              #calc "-$cos45*$innerR";
y3              #calc " $cos45*$innerR";
y4              #calc " $cos45*$R";
y5              #calc " $cos45*$bigR";

//all possible z-coordinates
z0              0;
z1              $L;

Gr_i              #calc "1.0/$Gr";


////////////////////////////

vertices        
(
    
    //nozzle core
    ($x2 $y3 $z0) //0
    ($x2 $y3 $z1) //1
    
    ($x3 $y3 $z0) //2
    ($x3 $y3 $z1) //3
    
    ($x3 $y2 $z0) //4
    ($x3 $y2 $z1) //5

    ($x2 $y2 $z0) //6
    ($x2 $y2 $z1) //7

    //nozzle outer
    ($x1 $y4 $z0) //8
    ($x1 $y4 $z1) //9
    
    ($x4 $y4 $z0) //10
    ($x4 $y4 $z1) //11

    ($x4 $y1 $z0) //12
    ($x4 $y1 $z1) //13

    ($x1 $y1 $z0) //14
    ($x1 $y1 $z1) //15


    //outer
    ($x0 $y5 $z0) //16
    ($x0 $y5 $z1) //17
    
    ($x5 $y5 $z0) //18
    ($x5 $y5 $z1) //19

    ($x5 $y0 $z0) //20
    ($x5 $y0 $z1) //21
	
    ($x0 $y0 $z0) //20
    ($x0 $y0 $z1) //21
    
); 

blocks          
(
    
    
    hex (6 4 2 0 7 5 3 1) ($Ntheta $Ntheta $Nz)    simpleGrading (1 1 1)          // 0 core
    
    
    hex (0 2 10 8 1 3 11 9) ($Ntheta $Nr_nozzle $Nz)  simpleGrading (1 1 1)        //1 N nozzle
    hex (12 10 2 4 13 11 3 5) ($Ntheta $Nr_nozzle $Nz) simpleGrading (1 1 1)      //2 E nozzle
    hex (14 12 4 6 15 13 5 7) ($Ntheta $Nr_nozzle $Nz) simpleGrading (1 1 1)  //3 S nozzle
    hex (6 0 8 14 7 1 9 15) ($Ntheta $Nr_nozzle $Nz) simpleGrading (1 1 1)  //4 w nozzle
    
    
    hex (8 10 18 16 9 11 19 17) ($Ntheta $Nr_outer $Nz) simpleGrading (1 $Gr 1)        //5 N outer
    hex (10 12 20 18 11 13 21 19) ($Ntheta $Nr_outer $Nz) simpleGrading (1 $Gr 1)        //6 E outer
    hex (12 14 22 20 13 15 23 21) ($Ntheta $Nr_outer $Nz) simpleGrading (1 $Gr 1)        //7 S outer
    hex (14 8 16 22 15 9 17 23) ($Ntheta $Nr_outer $Nz) simpleGrading (1 $Gr 1)        //8 W outer
    
    
);
 
edges 
(
    
    //N nozzle
    arc 8 10 (0 $R $z0) 
 	arc 9 11 (0 $R $z1) 

    //E nozzle
    arc 10 12 ($R 0 $z0) 
 	arc 11 13 ($R 0 $z1)

    //S nozzle
    arc 12 14 (0 $negativeR $z0) 
 	arc 13 15 (0 $negativeR $z1)

    //W nozzle
    arc 14 8 ($negativeR 0 $z0) 
 	arc 15 9 ($negativeR 0 $z1)

    

    //N outer
    arc 16 18 (0 $bigR $z0) 
 	arc 17 19 (0 $bigR $z1) 

    //E nozzle
    arc 18 20 ($bigR 0 $z0) 
 	arc 19 21 ($bigR 0 $z1)

    //S nozzle
    arc 20 22 (0 $negativeBigR $z0) 
 	arc 21 23 (0 $negativeBigR $z1)

    //W nozzle
    arc 22 16 ($negativeBigR 0 $z0) 
 	arc 23 17 ($negativeBigR 0 $z1)

    
 	
    
               
);

boundary
(
    
    inlet
 	{
 		type            patch;
 		faces
 		(
 		    (2 0 6 4) //core
            (10 8 0 2) //N
            (10 2 4 12) //E
            (4 6 14 12) //S
            (8 14 6 0)  //W
 		);
 	}	
 	
    around_nozzle
 	{
 		type            patch;
 		faces
 		(
 		    
            (18 16 8 10) //N
            (20 18 10 12) //E
            (22 20 12 14) //S
            (16 22 14 8)  //W
 		);
 	}	

 	outlet
 	{
 		type            patch;
 		faces
 		(
 		    (1 3 5 7) //core
            (9 11 3 1) //N nozzle
            (11 13 5 3) //E nozzle
            (7 5 13 15) //S nozzle
            (15 9 1 7)  //W nozzle

            (17 19 11 9)  //N outer
            (19 21 13 11) //E outer
            (21 23 15 13) //S outer
            (23 17 9 15)  //W outer

 		);
 	}	
 	

    outer
 	{
 		type            patch;
 		faces
 		(
 		    (18 19 17 16) //N
            (20 21 19 18) //E
            (22 23 21 20) //S
            (16 17 23 22) //E
 		);
 	}	
    
    
    
);
 
mergePatchPairs 
(
);

